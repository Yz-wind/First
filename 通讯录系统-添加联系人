//功能描述：实现添加联系人功能，联系上限为1000人，联系人信息包括（姓名、性别、联系电话、家庭住址）
//添加联系人实现步骤：设计联系人结构体-设计通讯录结构体-main函数中创建通讯录-封装添加联系人函数-测试添加联系人功能

//设计联系人的结构体
struct Person
{
    string m_Name;//姓名
    int m_Sex;//性别
    int m_Age;//年龄
    string m_Phone;//电话
    string m_Addr;//住址
};

//设计通讯录结构体
struct Addressbooks
{
    //通讯录中保存的联系人数组
    struct Person personArray[MAX];
    //通讯录中当前记录联系人个数
    int m_size;
};

//1、添加联系人
void addPerson(Addressbooks* abs)//abs为main函数中创建的通讯录结构体变量
{
    //判断通讯录是否已满，如果满了就不在添加
    if (abs->m_size == MAX)
    {
        cout << " 通讯录已满，已无法添加！" << endl;
        return;
    }
    else
    {
        //添加具体联系人
        string name;
        cout << "请输入姓名" << endl;
        cin >> name;
        abs->personArray[abs->m_size].m_Name = name;

        //性别
        cout << "请输入性别： " << endl;
        cout << "1-- 男" << endl;
        cout << "2-- 女" << endl;
        int sex = 0;

        while (true)
        {
            cin >> sex;
            if (sex == 1 || sex == 2)
            {
                abs->personArray[abs->m_size].m_Sex = sex;
                break;
            }
            cout << "输入有误，请重新输入" << endl;
        }
    }

    //年龄
    cout << "请输入年龄： " << endl;
    int age = 0;
    cin >> age;
    abs->personArray[abs->m_size].m_Age = age;

    //电话
    cout << "请输入电话： " << endl;
    string phone;
    cin >> phone;
    abs->personArray[abs->m_size].m_Phone = phone;

    //住址
    cout << "请输入家庭地址： " << endl;
    string address;
    cin >> address;
    abs->personArray[abs->m_size].m_Addr = address;

    //更新通讯录人数；
    abs->m_size++;

    cout << "添加成功！" << endl;

    system("pause");//请按任意键继续
    system("cls");//清屏操作
}
