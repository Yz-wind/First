#include <stdio.h>
#define N 1000  //从一到某一范围，此处为了调试设为1000

int main()
{
    int i,j;
    int number[N + 1];
    number[0] = 0;
    number[1] = 0;
    for (i = 2; i < N; i++)
    {
        number[i] = 1;
    }
    for (i = 2; i * i < N; i++) //只能被1和自己整除的数才是素数，只要判断到此数的平方根即可 
    {
        if (number[i] == 1)   //如果i是素数
        {
            for (j = 2; j * i < N; j++)
            {
                number[j * i] = 0; //如果i是素数，则i*j不是素数
            }
        }
    }
    for (i = 2; i < N; i++)
    {
        if (number[i] == 1)
        {
            printf("%d ", i); //输出所有素数
        }
    }
    return 0;
}
//用筛法求素数的基本思想是：把从1开始的、某一范围内的正整数从小到大顺序排列， 1不是素数，首先把它筛掉。剩下的数中选择最小的数是素数，然后去掉它的倍数。依次类推，直到筛子为空时结束。
//遇到的问题：花了较长时间在如何筛出非素数
