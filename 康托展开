static const int F[] = { 1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880 };	// 0到九的阶乘
int canto(int* a, int n)
{
	int sum = 0;//sum是康托展开值
	for (int i = 0; i < n; i++)
	{
		int small = 0;//小于当前位的数的个数
		for (int j = i + 1; j < n; j++)
		{
			if (a[j] < a[i])
			{
				small++;
			}
		}
		sum = sum + F[n - i - 1] * small;
	}
	return sum+1;//最后输出的是名次
}
//原理：X=a[n]*(n-1)!+a[n-1]*(n-2)!+...+a[i]*(i-1)!+...+a[1]*0!
//其中, a[i]为整数，并且0 <= a[i] <= i, 0 <= i < n, 表示当前未出现的的元素中排第几个，这就是康托展开。
//首先学习了康托展开，算法我是将一个数从高位到低位的数字存入到数组中，从而方便比较大小
